openapi: 3.1.0
info:
  title: Climate Science Service - OpenAPI 3.1.0
  description: |-
    This is a JSON REST API for fetching details of climate scientists and their publications, based on the OpenAPI 3.1 specification.
    Some useful links:
    - [The Climate Science page](https://campaign-resources.org/climate.html)
  termsOfService: https://campaign-resources.org/climate.html
  contact:
    email: adrianp.quatinus@virginmedia.com
  license:
    name: GNU Affero General Public License v3.0
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  version: 0.0.1
externalDocs:
  description: Find out more about climate sceptics and science
  url: https://campaign-resources.org/media/Climate%20Science/Climate%20Sceptics.pdf
servers:
  - url: http://debian.local/climate-science-service
    description: Local development server
  - url: https://campaign-resources.org/climate-science-service
    description: Production server
tags:
  - name: Scientists
    description: Everything about climate sceptic scientists
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Science
    description: Everything about climate sceptic science
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Declarations
    description: Public declarations, open letters, etc.
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Quotations
    description: Public spoken or written quotations.
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Authorship
    description: Who wrote what climate science publication
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Signatories
    description: Who signed what declarations and open letters
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Security
    description: Authentication and authorisation
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: Statistics
    description: Database metrics
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /auth/login:
    post:
      tags:
        - Security
      summary: Logs into the server
      description: If successful, the operation returns a JWT bearer token
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/Credentials'
      responses:
        '200':
          $ref: '#/components/responses/Authenticated'
  /person/{personId}:
    get:
      tags:
        - Scientists
      summary: Retrieves a person
      description: Retrieves the person specified by their unique database identifier
      operationId: getPersonById
      parameters:
        - $ref: '#/components/parameters/personIdPath'
      responses:
        '200':
          $ref: '#/components/responses/Person'
        '404':
          $ref: '#/components/responses/NotFound'
  /person/find:
    get:
      tags:
        - Scientists
      summary: Finds persons
      description: Results can be paginated by supplying start and record count
      operationId: findPersons
      parameters:
        - $ref: '#/components/parameters/filterOpt'
        - $ref: '#/components/parameters/startOpt'
        - $ref: '#/components/parameters/countOpt'
      responses:
        '200':
          $ref: '#/components/responses/Persons'
        '400':
          $ref: '#/components/responses/Invalid'
  /person/findByPublication:
    get:
      tags:
        - Scientists
      summary: Finds persons
      description: Finds persons by publication ID
      operationId: findPersonsByPublication
      parameters:
        - $ref: '#/components/parameters/publicationId'
        - $ref: '#/components/parameters/filterOpt'
        - $ref: '#/components/parameters/startOpt'
        - $ref: '#/components/parameters/countOpt'
      responses:
        '200':
          $ref: '#/components/responses/Persons'
        '400':
          $ref: '#/components/responses/Invalid'
  /person/findByDeclaration:
    get:
      tags:
        - Scientists
      summary: Finds persons
      description: Finds persons by declaration ID
      operationId: findPersonsByDeclaration
      parameters:
        - $ref: '#/components/parameters/declarationId'
        - $ref: '#/components/parameters/filterOpt'
        - $ref: '#/components/parameters/startOpt'
        - $ref: '#/components/parameters/countOpt'
      responses:
        '200':
          $ref: '#/components/responses/Persons'
        '400':
          $ref: '#/components/responses/Invalid'
  /publication/{publicationId}:
    get:
      tags:
        - Science
      summary: Retrieves a publication
      description: Retrieves the publication specified by its unique database identifier
      operationId: getPublicationById
      parameters:
        - $ref: '#/components/parameters/publicationIdPath'
      responses:
        '200':
          $ref: '#/components/responses/Publication'
        '404':
          $ref: '#/components/responses/NotFound'
  /publication/find:
    get:
      tags:
        - Science
      summary: Finds publications
      description: Results can be paginated by supplying start and record count
      operationId: findPublications
      parameters:
        - $ref: '#/components/parameters/filterOpt'
        - $ref: '#/components/parameters/startOpt'
        - $ref: '#/components/parameters/countOpt'
      responses:
        '200':
          $ref: '#/components/responses/Publications'
        '400':
          $ref: '#/components/responses/Invalid'
  /publication/findByAuthor:
    get:
      tags:
        - Science
      summary: Finds publications
      description: Finds publications by author ID and/or last name
      operationId: findPublicationsByAuthor
      parameters:
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/lastNameOpt'
        - $ref: '#/components/parameters/filterOpt'
        - $ref: '#/components/parameters/startOpt'
        - $ref: '#/components/parameters/countOpt'
      responses:
        '200':
          $ref: '#/components/responses/Publications'
        '400':
          $ref: '#/components/responses/Invalid'
  /declaration/{declarationId}:
    get:
      tags:
        - Declarations
      summary: Retrieves a declaration
      description: Retrieves a declaration as specified by its unique database identifier
      operationId: getDeclarationById
      parameters:
        - $ref: '#/components/parameters/declarationIdPath'
      responses:
        '200':
          $ref: '#/components/responses/Declaration'
        '404':
          $ref: '#/components/responses/NotFound'
  /declaration/find:
    get:
      tags:
        - Declarations
      summary: Finds declarations
      description: Results can be paginated by supplying start and record count
      operationId: findDeclarations
      parameters:
        - $ref: '#/components/parameters/filterOpt'
        - $ref: '#/components/parameters/startOpt'
        - $ref: '#/components/parameters/countOpt'
      responses:
        '200':
          $ref: '#/components/responses/Declarations'
        '400':
          $ref: '#/components/responses/Invalid'
  /declaration/findBySignatory:
    get:
      tags:
        - Declarations
      summary: Finds declarations
      description: Finds declarations by signatory ID
      operationId: findDeclarationsBySignatory
      parameters:
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/lastNameOpt'
        - $ref: '#/components/parameters/filterOpt'
        - $ref: '#/components/parameters/startOpt'
        - $ref: '#/components/parameters/countOpt'
      responses:
        '200':
          $ref: '#/components/responses/Declarations'
        '400':
          $ref: '#/components/responses/Invalid'
  /quotation/{quotationId}:
    get:
      tags:
        - Quotations
      summary: Finds a quotation
      description: Retrieves a quotation as specified by its unique database identifier
      operationId: getQuotationById
      parameters:
        - $ref: '#/components/parameters/quotationIdPath'
      responses:
        '200':
          $ref: '#/components/responses/Quotation'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - Quotations
      summary: Links or unlinks a quotation and person
      description: Links or unlinks a specified Person as the origin of a specified Quotation.
      operationId: linkQuotationAuthor
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/quotationIdPath'
        - $ref: '#/components/parameters/personIdOpt'
      responses:
        '200':
          $ref: '#/components/responses/Updated'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /quotation/find:
    get:
      tags:
        - Quotations
      summary: Finds quotations
      description: Results can be paginated by supplying start and record count
      parameters:
        - $ref: '#/components/parameters/filterOpt'
        - $ref: '#/components/parameters/startOpt'
        - $ref: '#/components/parameters/countOpt'
      responses:
        '200':
          $ref: '#/components/responses/Quotations'
        '400':
          $ref: '#/components/responses/Invalid'
  /quotation/findByAuthor:
    get:
      tags:
        - Quotations
      summary: Finds quotations
      description: Finds quotations by author ID and/or last name
      operationId: findQuotationsByAuthor
      parameters:
        - $ref: '#/components/parameters/personId'
        - $ref: '#/components/parameters/lastNameOpt'
        - $ref: '#/components/parameters/filterOpt'
        - $ref: '#/components/parameters/startOpt'
        - $ref: '#/components/parameters/countOpt'
      responses:
        '200':
          $ref: '#/components/responses/Quotations'
        '400':
          $ref: '#/components/responses/Invalid'
  /authorship/{personId}/{publicationId}:
    put:
      tags:
        - Authorship
      summary: Create a new authorship
      description: Links a person to a publication.
      operationId: createAuthorship
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/personIdPath'
        - $ref: '#/components/parameters/publicationIdPath'
      responses: 
        '201':
          $ref: '#/components/responses/Created'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Authorship
      summary: Deletes an existing authorship
      description: Deletes the link between a person and a publication. Operation only available to local clients.
      operationId: deleteAuthorship
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/personIdPath'
        - $ref: '#/components/parameters/publicationIdPath'
      responses: 
        '200':
          $ref: '#/components/responses/Deleted'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /signatory/{personId}/{declarationId}:
    put:
      tags:
        - Signatories
      summary: Create a new signatory
      description: Links a person to a declaration.
      operationId: createSignatory
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/personIdPath'
        - $ref: '#/components/parameters/declarationIdPath'
      responses: 
        '201':
          $ref: '#/components/responses/Created'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Signatories
      summary: Deletes an existing signatory
      description: Deletes the link between a person and a declaration. Operation only available to local clients.
      operationId: deleteSignatory
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/personIdPath'
        - $ref: '#/components/parameters/declarationIdPath'
      responses: 
        '200':
          $ref: '#/components/responses/Deleted'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /statistic/find:
    get:
      tags:
        - Statistics
      summary: Fetch database statistics
      description: Show record counts for various categories of database entry
      operationId: findStatistics
      parameters:
        - $ref: '#/components/parameters/topic'
        - $ref: '#/components/parameters/startOpt'
        - $ref: '#/components/parameters/countOpt'
      responses:
        '200':
          $ref: '#/components/responses/Statistics'
        '400':
          $ref: '#/components/responses/Invalid'
components:
  schemas:
    Credentials:
      type: object
      properties:
        userId:
          type: string
          description: The user ID or email address
        password:
          type: string
          format: password
          description: The password
    Person:
      type: object
      properties:
        ID:
          type: integer
          format: int32
          description: Unique database person identifier
        TITLE:
          type: string
          maxLength: 10
          description: The person's title
        FIRST_NAME:
          type: string
          maxLength: 80
          description: The person's first names
        NICKNAME:
          type: string
          maxLength: 40
          description: Alternative first name
        LAST_NAME:
          type: string
          maxLength: 40
          description: The person's lasts name
        ALIAS:
          type: string
          maxLength: 40
          description: Alternative last name
        SUFFIX:
          type: string
          maxLength: 16
          description: Last name suffix
        COUNTRY:
          type: string
          maxLength: 50
          description: The country with which the person is most associated in the climate science context
        DESCRIPTION:
          type: string
          description: Brief person description/micro-biography
        QUALIFICATIONS:
          type: string
          description: The person's academic qualifications.
        RATING:
          type: integer
          format: int32
          minimum: 0
          maximum: 5
          description: Academic eminence star rating, 1..5
        CHECKED:
          type: boolean
          description: Whether the person's credentials have been checked/verified
        PUBLISHED:
          type: boolean
          description: Whether the person has published peer-reviewed climate science
    Publication:
      type: object
      properties:
        ID:
          type: integer
          format: int64
          description: Unique database publication identifier
        TITLE:
          type: string
          maxLength: 200
          description: The publication or article title
        AUTHORS:
          type: string
          maxLength: 100
          description: Publication author names, one per line
        JOURNAL:
          type: string
          maxLength: 100
          description: The name of the journal in which the article was published
        PUBLICATION_TYPE_ID:
          type: string
          maxLength: 6
          description: The publication type, must be a valid RIS type code.
        PUBLICATION_DATE:
          type: string
          minLength: 10
          maxLength: 10
          description: Publication date in yyyy/mm/dd format
        PUBLICATION_YEAR:
          type: string
          minLength: 4
          maxLength: 4
          description: Publication year in yyyy format
        PEER_REVIEWED:
          type: boolean
          description: Whether the publication was peer-reviewed.
        DOI:
          type: string
          maxLength: 255
          description: The digital object identifier
        ISSN_ISBN:
          type: string
          maxLength: 20
          description: The ISSN or ISBN
        URL:
          type: string
          maxLength: 200
          description: Link to a relavant web page
        ACCESSED:
          type: string
          maxLength: 10
          description: Access date in yyyy/mm/dd format
        LINKED:
          type: boolean
          description: Whether the authorship link exists in the database
      xml:
        name: publication
    Declaration:
      type: object
      properties:
        ID:
          type: integer
          format: int64
          description: Unique database publication identifier
        TYPE:
          type: string
          maxLength: 20
          description: The type of declaration
        TITLE:
          type: string
          maxLength: 100
          description: The title or name by which the document is referred
        DATE:
          type: string
          minLength: 10
          maxLength: 10
          description: the date on which the document was published, in yyyy/mm/dd format.
        COUNTRY:
          type: string
          maxLength: 50
          description: The country (if any) in which the document was published
        URL:
          type: string
          maxLength: 200
          description: Link to a relevant web page
    Quotation:
      type: object
      properties:
        ID:
          type: integer
          format: int64
          description: Unique database quotation identifier
        PERSON_ID:
          type: integer
          format: int64
          description: Unique database person identifier
        AUTHOR:
          type: string
          maxLength: 50
          description: The quotation author's name
        TEXT:
          type: string
          maxLength: 1000
          description: The quotation text
        DATE:
          type: string
          description: The quotation date
        SOURCE:
          type: string
          maxLength: 200
          description: The quotation source
        URL:
          type: string
          maxLength: 200
          description: The quotation URL
        LINKED:
          type: boolean
          description: Indicates whether the quotation is explicitly linked to a person
    Statistic:
      type: object
      properties:
        CATEGORY:
          type: string
          maxLength: 16
          description: The metric CATEGORY
        COUNT:
          type: integer
          format: int32
          description: The record count for the category
        DESCRIPTION:
          type: string
          maxLength: 80
          description: Textual description of the category
  parameters:
    personId:
      name: personId
      in: query
      description: Unique person or author identifier
      required: true
      schema:
        type: integer
        format: int32
    personIdOpt:
      name: personId
      in: query
      description: Unique person or author identifier
      required: false
      schema:
        type: integer
        format: int32
    personIdPath:
      name: personId
      in: path
      description: Unique person or author identifier
      required: true
      schema:
        type: integer
        format: int32
    publicationId:
      name: publicationId
      in: query
      description: Unique publication identifier
      required: true
      schema:
        type: integer
        format: int32
    publicationIdPath:
      name: publicationId
      in: path
      description: Unique publication identifier
      required: true
      schema:
        type: integer
        format: int32
    declarationId:
      name: declarationId
      in: query
      description: Unique declaration identifier
      required: true
      schema:
        type: integer
        format: int32
    declarationIdPath:
      name: declarationId
      in: path
      description: Unique quotation identifier
      required: true
      schema:
        type: integer
        format: int32
    quotationId:
      name: quotationId
      in: query
      description: Unique quotation identifier
      required: true
      schema:
        type: integer
        format: int32
    quotationIdPath:
      name: quotationId
      in: path
      description: Unique quotation identifier
      required: true
      schema:
        type: integer
        format: int32
    topic:
      name: topic
      in: query
      description: Topic name
      required: true
      schema:
        type: string
        description: The topic for which metrics are requested
        enum:
          - climate
    lastNameOpt:
      name: lastName
      in: query
      description: Author's last name
      required: false
      schema:
        type: string
        maxLength: 10
    filterOpt:
      name: filter
      in: query
      description: Search string
      required: false
      schema:
        type: string
    startOpt:
      name: start
      in: query
      description: Start record number
      required: false
      schema:
        type: integer
        format: int32
        default: 0
    countOpt:
      name: count
      in: query
      description: Maximum record count to return, default returns all
      required: false
      schema:
        type: integer
        format: int32
        default: 0
  requestBodies:
    Credentials:
      description:  Authentication credentials
      content:
        'application/json':
          schema:
            $ref: '#/components/schemas/Credentials'
  responses:
    Authenticated:
      description: Success, authenticated. Returns a JWT bearer token
      content:
        text/plain:
          schema:
            type: string
    Person:
      description: Success, returns a Person object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Person'
    Persons:
      description: Success, returns a total count and a pageful of Person objects.
      content:
        application/json:
          schema:
            type: object
            properties:
              count:
                type: integer
                format: int32
                description: Total item count
              records:
                type: array
                description: The requested pageful of items
                items:
                  $ref: '#/components/schemas/Person'
    Publication:
      description: Success, returns a Publication object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Publication'
    Publications:
      description: Success, returns a total count and a pageful of Publication objects.
      content:
        application/json:
          schema:
            type: object
            properties:
              count:
                type: integer
                format: int32
                description: Total item count
              records:
                type: array
                description: The requested pageful of items
                items:
                  $ref: '#/components/schemas/Publication'
    Declaration:
      description: Success, returns a Declaration object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Declaration'
    Declarations:
      description: Success, returns a total count and a pageful of Declaration objects.
      content:
        application/json:
          schema:
            type: object
            properties:
              count:
                type: integer
                format: int32
                description: Total item count
              records:
                type: array
                description: The requested pageful of items
                items:
                  $ref: '#/components/schemas/Declaration'
    Quotation:
      description: Success, returns a Quotation object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Quotation'
    Quotations:
      description: Success, returns a total count and a pageful of Quotation objects
      content:
        application/json:
          schema:
            type: object
            properties:
              count:
                type: integer
                format: int32
                description: Total item count
              records:
                type: array
                description: The requested pageful of items
                items:
                  $ref: '#/components/schemas/Quotation'
    Statistics:
      description: Success, returns a total count and a pageful of Statistic objects
      content:
        application/json:
          schema:
            type: object
            properties:
              count:
                type: integer
                format: int32
                description: Total item count
              records:
                type: array
                description: The requested pageful of items
                items:
                  $ref: '#/components/schemas/Statistic'
    Created:
      description: Success, resource created
    Deleted:
      description: Success, resource deleted
    Updated:
      description: Success, resource updated
    Invalid:
      description: Bad request (e.g., invalid start or count query parameter)
    NotFound:
      description: Referenced resource not found
    Unauthorized:
      description: Access token is missing or invalid
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT